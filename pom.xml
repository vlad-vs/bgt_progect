<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>bgt_progect</groupId>
    <artifactId>bgt_progect</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>


    <properties>
        <hibernate-version>5.2.8.Final</hibernate-version>
        <java.version>1.8</java.version>
        <spring.version>4.3.9.RELEASE</spring.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <sl4j-version>1.6.0</sl4j-version>
    </properties>

    <dependencies>

        <!--HIBERNATE-->

        <!--=========================================================================-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.193</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.16.1</version>
        </dependency>

        <!--=========================================================================-->

        <!--Логирование кода (+ файл настроек и файл логирования!)-->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${sl4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${sl4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${sl4j-version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${sl4j-version}</version>
        </dependency>


        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.2.8.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.2.8.Final</version>
        </dependency>
        <!--=========================================================================-->

        <!--SPRING-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--=========================================================================-->

        <!--Spring jdbc-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- + к jdbc! Этот модуль расширяет стандартный набор средств JDBC платформы Spring
        поддержкой популярных инструментов ORM, в числе которых Hibernate-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--=========================================================================-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Spring для начальной зaгрузки JVM на сервере Tomcat-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-instrument-tomcat</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Object/XML Mapping - отображние объектов на XML -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--предназначенные для поддержки инфраструктуры транзакций Spring-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!--=========================================================================-->
        <!--предназначенные для поддержки внедрения АОП сервисов-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--предназначенные для поддержки внедрения АОП сервисов-->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.1</version>
        </dependency>

        <!--предназначенные для поддержки внедрения АОП сервисов-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--=========================================================================-->

        <!--Для плагина maven-surefire-pluginmaven-surefire-plugin-->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.20</version>
            <type>maven-plugin</type>
        </dependency>


        <!--Servlet-->
        <!-- https://mvnrepository.com/artifact/javax.servlet/jsp-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>


        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.10</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/javax.inject/javax.inject -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!--spring security-->

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-core -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>4.2.3.RELEASE</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-web -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>4.2.3.RELEASE</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-config -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>4.2.3.RELEASE</version>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>log4j</groupId>-->
        <!--<artifactId>log4j</artifactId>-->
        <!--<version>1.2.17</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-api</artifactId>-->
        <!--<version>1.7.5</version>-->
        <!--</dependency>-->


        <dependency>
            <groupId>com.googlecode.log4jdbc</groupId>
            <artifactId>log4jdbc</artifactId>
            <version>1.2</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.34</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.2</version>
        </dependency>


    </dependencies>

    <!--=========================================================================-->
    <build>
        <!--
        <sourceDirectory>
        определяет, откуда maven будет брать файлы исходного кода. По умолчанию это src/main/java, но вы можете
        определить, где это вам удобно. Директория может быть только одна (без использования специальных плагинов)

        <resources>
        и вложенные в неё тэги <resource> определяют, одну или несколько директорий, где хранятся
        файлы ресурсов. Ресурсы в отличие от файлов исходного кода при сборке просто копируются .
        Директория по умолчанию src/main/resources

        <outputDirectory>
        определяет, в какую директорию компилятор будет сохранять результаты компиляции - *.class файлы.
         Значение по умолчанию - target/classes

        <finalName>
        - имя результирующего jar (war, ear..) файла с соответствующим типу расширением, который
         создаётся на фазе package. Значение по умолчанию — artifactId-version.
        -->
        <outputDirectory>target</outputDirectory>
        <finalName>ROOT</finalName>
        <sourceDirectory>src/main/java</sourceDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <!--=========================================================================-->
        <plugins>
            <!--
                  Компилятор - основной плагин который используется практически во всех проектах.
                  Он доступен по умолчанию, но практически в каждом проекте его приходится переобъявлять т.к.
                  настройки по умолчанию не очень подходящие.

                  source - версия языка на котором написана программа;
                  target - версия java машины которая будет этот код запускать) и указано что кодировка
                  исходного кода программы UTF-8. По умолчанию версии java - 1.3 а кодировка - та которая
                  у операционной системы по умолчанию.
                  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                    <!--<failOnError>false</failOnError>-->
                </configuration>
            </plugin>

            <!--===================================================================-->

            <!--maven-pmd-plugin - плагин для автоматического анализа кода на предмет наличия "нехорошего кода".
            Также в этом плагине есть цель которая находит дубликаты кода Copy/Paste Detector (CPD).
            Основан на проекте a http://pmd.sourceforge.net/

            Существует два режима работы плагина:

            1. Генерирование отчётов PMD и CPD (цели pmd:pmd pmd:cpd) полезно для оценки качества существующих проектов
            которые раньше не использовали эти инструменты. Позволяет оценить масштабы "бедствия".

            2. Проверяют проект на наличие нарушений. В случае, если находится нарушение, сборка ломается(цели pmd:check pmd:cpd-check ).
            Удобно использовать в самом начале проекта совместно с непрерывной интеграцией. Гарантирует что код всегда
            "чистый". Экономит много времени ревизии кода (code review). Позволяет сделать разработку более масштабируемой
            - для большого проекта можно нанять больше программистов.
            Пример декларирования плагина для второго случая:
            -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-pmd-plugin</artifactId>-->
                <!--<version>2.5</version>-->
                <!--<configuration>-->
                    <!--<targetJdk>1.8</targetJdk>-->
                    <!--<verbose>true</verbose>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--===================================================================-->

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
                <!--<version>2.7</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;<configLocation>src/config/checkstyle.xml</configLocation>&ndash;&gt;-->
                    <!--<consoleOutput>true</consoleOutput>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--===================================================================-->


            <!--maven-war-plugin с помощтю которого мы сможем отключить необходимость web.xml файла-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-war-plugin</artifactId>-->
            <!--<configuration>-->
            <!--<failOnMissingWebXml>false</failOnMissingWebXml>-->
            <!--</configuration>-->
            <!--</plugin>-->

        </plugins>
    </build>
</project>